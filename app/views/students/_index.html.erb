<style>

  /*Imitate a link*/
  .myHover:hover{
    cursor: pointer;
  }
</style>

<p class="lead text-right">
  <span class="glyphicon glyphicon-print myHover" style="color: #337ab7" title="Zugangsdaten der Klasse" onclick="printStudentsData()"></span>
</p>
<table id="table" class="table table-striped">
  <thead>
  <th>
    Schüler/-in
  </th>
  <th>
    Login-Code
  </th>
  <th>
    Geschlecht
  </th>
  <th>
    Geburtsdatum
  </th>
  <th>
    Migrationshintergrund
  </th>
  <th>
    Förderbedarf
  </th>
  <th>
    Insgesamte Messungen
  </th>
  <th>
    Aktion
  </th>
  </thead>
  <tbody>
  <script>
    var studentsIdLoginPair = {}
  </script>
  <% @group.students.sort_by { |a| a.id}.each do |student| %>
      <script>
        //catch secretly id,login pair <- For printing access data
          studentsIdLoginPair['<%= student.id %>'] = "<%= student.login %>";
      </script>
      <tr>
        <td id ='<%= student.id %>'>
        </td>
        <td>
          <%= student.login %>
        </td>
        <td>
          <%= raw(student.get_gender) %>
        </td>
        <td>
          <%= raw(student.get_birthdate) %>
        </td>
        <td>
          <%= raw(student.get_migration) %>
        </td>
        <td>
          <%= raw(student.get_specific_needs) %>
        </td>
        <td>
          <%= link_to user_group_student_path(@user, @group, student), :data => {:remote => true} do %>
            <%= (student.results.map{|x| x.score} - [nil]).size %>
          <% end %>
        </td>
        <td>
          <%if @user.id == @login_user.id%>
              <%= link_to edit_user_group_student_path(@user, @group, student), :data => {:remote => true} do %>
                  <span class="glyphicon glyphicon-pencil"></span>
              <% end %>
          <%end%>
            <%= link_to user_group_student_path(@user, @group, student), :method => :delete, :data => {:remote => true, :confirm => "Sind Sie sicher?"} do %>
                <span class="glyphicon glyphicon-trash"></span>
            <% end %>
        </td>
      </tr>
  <% end %>
  </tbody>
</table>
<%if @user.id == @login_user.id%>
    <div id="studentForm">
      <%= link_to "Schüler/-in hinzufügen", new_user_group_student_path(@user, @group), :class => "btn btn-default", :data => {:remote => true} %>
    </div>
<%end%>
<script>

    var students = JSON.parse(sessionStorage['students']);
    if("<%=@group.id%>" in students){
        Object.keys(students["<%=@group.id%>"]).forEach(function(keyStudent) {
            $('#'+ keyStudent).html(students["<%=@group.id%>"][keyStudent])
        });
    }
    else{
        students["<%=@group.id%>"] = {};
        sessionStorage['students'] = JSON.stringify(students);
    }

    function sort() {
        var table, rows, switched, shouldSwitch, i, a, b;
        table = document.getElementById("table");
        switched = true;
        while (switched) {
            switched = false;
            rows = table.getElementsByTagName("TR");
            for (i = 1; i < (rows.length - 1); i++) {
                shouldSwitch = false;
                a = rows[i].getElementsByTagName("TD")[0];
                b = rows[i + 1].getElementsByTagName("TD")[0];
                if (a.innerHTML.toLowerCase() > b.innerHTML.toLowerCase()) {
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switched = true;
            }
        }
    }
    //
    $(document).ready(function () {
        sort();
    });


    function printStudentsData() {
        var docDefinition = {
            pageSize: 'A4',
            content: [
                {
                    columns:[
                        {
                            width:'auto',
                            stack:[
                                {image: levumiPic,
                                    width: 40
                                }
                            ]
                        },
                        {text:
                        'Levumi Zugangsdaten der Klasse - <%=@group.name%>',
                            fontSize: 15,
                            margin: [0, 10, 0, 0]
                        }
                    ]
                }
            ],
            styles: {
                subheader: {
                    fontSize: 13,
                    margin: [50, 0, 5, 5]
                }
            }
        };
        generateTable( docDefinition);
        // download the PDF
        pdfMake.createPdf(docDefinition).download('Zugangsdaten der Klasse - <%=@group.name%>.pdf');
    }
    
    function generateTable(docDefinition) {
        var tableToGenerate = [
            [
                {text:"Name", alignment:'center', fontSize:11, bold:true},
                {text:"Zugangscode", alignment:'center', fontSize:11, bold:true},
                {text:"Name", alignment:'center', fontSize:11, bold:true},
                {text:"Zugangscode", alignment:'center', fontSize:11, bold:true},
                {text:"Name", alignment:'center', fontSize:11, bold:true},
                {text:"Zugangscode", alignment:'center', fontSize:11, bold:true}
            ]
            ];
        var count=0;
        table = document.getElementById("table");
        rows = table.getElementsByTagName("TR");
        var temp = [];
        for (i = 1; i < rows.length; i++) {
            id = rows[i].getElementsByTagName("TD")[0].id;
            temp = temp.concat(
                [
                    {text:students["<%=@group.id%>"][id], alignment:'center', fontSize:11},
                    {text:studentsIdLoginPair[id], alignment:'center', fontSize:11}
                ]
            );
            if(count%3 ==2){
                tableToGenerate = tableToGenerate.concat([temp]);
                temp = [];
            }
            count = count +1;
        }
        //Fill table and add last line, whenn needed
        if(count%3 !=0){
            if(count%3==1){
                temp = temp.concat(
                    [
                        {text:"-", alignment:'center', fontSize:11},
                        {text:"-", alignment:'center', fontSize:11},
                        {text:"-", alignment:'center', fontSize:11},
                        {text:"-", alignment:'center', fontSize:11}
                    ]
                );

            }
            else{
                temp = temp.concat(
                    [
                        {text:"-", alignment:'center', fontSize:11},
                        {text:"-", alignment:'center', fontSize:11}
                    ]
                );
            }
            tableToGenerate = tableToGenerate.concat([temp]);
        }


        var table = [
            {
                table: {
                    widths: [85,70,85, 70, 85, 70],
                    body: tableToGenerate,
                    dontBreakRows: true
                },
                margin: [0,20,0,0] ,
                layout: {
                    fillColor: function (i, node) {
                        return (i === 0) ? '#46B8DA' : null;
                    }
                }
            }
        ];
        docDefinition["content"] = docDefinition["content"].concat(table)
    }
    
</script>